{"version":3,"sources":["components/Movie/CastList/CastList.module.css","components/Movie/CastList/noAvatar.jpg","components/Movie/CastList/CastList.js","pages/Cast.js"],"names":["module","exports","CastList","cast","className","styles","castList","map","cast_id","profile_path","name","character","profileImg","noAvatar","src","alt","Cast","state","isLoading","this","setState","movieId","props","match","params","MoviesAPI","then","type","color","height","width","timeout","Component"],"mappings":"6HACAA,EAAOC,QAAU,CAAC,SAAW,6B,qKCDd,MAA0B,qCCqC1BC,EA9BE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,oBAAIC,UAAWC,IAAOC,SAAtB,SACGH,EAAKI,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAClCC,EAAaH,EALT,kCAKkCA,EAAeI,EAE3D,OACE,+BACE,qBAAKC,IAAKF,EAAYG,IAAKL,IAC3B,6BAAKA,IACL,2CAEGC,OALIH,S,QCRIQ,E,4MACnBC,MAAQ,CAAEd,KAAM,GAAIe,WAAW,G,kEAEV,IAAD,OAClBC,KAAKC,SAAS,CAAEF,WAAW,IADT,IAEVG,EAAYF,KAAKG,MAAMC,MAAMC,OAA7BH,QACRI,IAA0BJ,GAASK,MAAK,gBAAGvB,EAAH,EAAGA,KAAH,OACtC,EAAKiB,SAAS,CAAEF,WAAW,EAAOf,c,+BAI5B,IACAA,EAASgB,KAAKF,MAAdd,KACR,OAAOgB,KAAKF,MAAMC,UAChB,cAAC,IAAD,CACES,KAAK,SACLC,MAAM,wBACNC,OAAQ,GACRC,MAAO,IACPC,QAAS,IACT3B,UAAU,WAGZ,cAAC,EAAD,CAAUD,KAAMA,Q,GAvBY6B","file":"static/js/9.a16eb27c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"castList\":\"CastList_castList__3fNzF\"};","export default __webpack_public_path__ + \"static/media/noAvatar.d2a6e125.jpg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"../CastList/CastList.module.css\";\nimport noAvatar from \"./noAvatar.jpg\";\n\nconst IMG_URL = \"https://image.tmdb.org/t/p/w500\";\n\nconst CastList = ({ cast }) => (\n  <ul className={styles.castList}>\n    {cast.map(({ cast_id, profile_path, name, character }) => {\n      const profileImg = profile_path ? IMG_URL + profile_path : noAvatar;\n\n      return (\n        <li key={cast_id}>\n          <img src={profileImg} alt={name}/>\n          <h3>{name}</h3>\n          <p>\n            Character: \n            {character}\n          </p>\n        </li>\n      );\n    })}\n  </ul>\n);\n\nCastList.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      cast_id: PropTypes.number.isRequired,\n      profile_path: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default CastList;","import React, { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport CastList from \"../components/Movie/CastList/CastList\";\nimport * as MoviesAPI from \"../components/API\";\n\nexport default class Cast extends Component {\n  state = { cast: [], isLoading: false };\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n    const { movieId } = this.props.match.params;\n    MoviesAPI.getMovieCredits(movieId).then(({ cast }) =>\n      this.setState({ isLoading: false, cast })\n    );\n  }\n\n  render() {\n    const { cast } = this.state;\n    return this.state.isLoading ? (\n      <Loader\n        type=\"Hearts\"\n        color=\"rgba(218,209,77,.836)\"\n        height={80}\n        width={100}\n        timeout={10000}\n        className=\"Loader\"\n      />\n    ) : (\n      <CastList cast={cast} />\n    );\n  }\n}"],"sourceRoot":""}