{"version":3,"sources":["components/FeedbackOptions/Statistics.js","components/FeedbackDisplay/Section.js","components/FeedbackOptions/leaveFeedback.js","components/FeedbackDisplay/Feedback.js","components/App.js","index.js"],"names":["Notification","message","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","leaveFeedback","options","onLeaveFeedback","map","option","type","name","onClick","protoTypes","PropTypes","string","isRequired","func","MyClassComponent","state","props","handelbarInc","e","nameLower","target","toLowerCase","setState","countTotalFeedback","a","b","c","countPositiveFeedbackPercentage","percent","Math","round","this","Component","defaultProps","App","ReactDOM","render","document","getElementById"],"mappings":"sPAGMA,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KA8B3BC,EA7BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OAAOJ,GAAQC,GAAWC,EACxB,qCACE,uCACQ,+BAAOF,OAEf,0CACW,+BAAOC,OAElB,sCACO,+BAAOC,OAEd,wCACS,+BAAOC,OAEhB,mDACoB,qCAAQC,WAI9B,cAAC,EAAD,CAAcN,QAAQ,uBCTXO,EAZC,SAAC,GAAD,QAAGC,aAAH,MAAW,GAAX,EAAeC,EAAf,EAAeA,SAAf,OACd,oCACE,6BAAKD,IACJC,M,gBCHCC,EAAgB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OAAOD,EAAQE,KAAI,SAACC,GAAD,OACjB,wBAEEC,KAAK,SACLC,KAAMF,EACNG,QAASL,EAJX,SAMGE,GALIA,OAUXJ,EAAcQ,WAAa,CACzBP,QAASQ,IAAUC,OAAOC,WAC1BT,gBAAiBO,IAAUG,KAAKD,YAGnBX,QCfMa,E,4MAanBC,MAAQ,CACNtB,KAAM,EAAKuB,MAAMvB,KACjBC,QAAS,EAAKsB,MAAMtB,QACpBC,IAAK,EAAKqB,MAAMrB,K,EAGlBsB,aAAe,SAACC,GAAO,IAIfC,EADFD,EADFE,OAAUb,KAEWc,cACvB,EAAKC,UAAS,SAACP,GAAD,sBACXI,EAAYJ,EAAMI,GAAa,O,EAIpCI,mBAAqB,SAACC,EAAGC,EAAGC,GAC1B,OAAOF,EAAIC,EAAIC,G,EAGjBC,gCAAkC,SAACH,EAAGC,EAAGC,GACvC,IACME,EAAWJ,GADHA,EAAIC,EAAIC,GACQ,IAE9B,OAAOG,KAAKC,MAAMF,GAAW,K,uDAGrB,IAAD,EACwBG,KAAKhB,MAA5BtB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,qCACE,cAAC,EAAD,CAASI,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB4B,KAAKd,iBAI1B,cAAC,EAAD,CAASlB,MAAM,aAAf,SACE,8BACE,cAAC,EAAD,CACEN,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOmC,KAAKR,mBAAmB9B,EAAMC,EAASC,GAC9CE,mBAAoBkC,KAAKJ,gCACvBlC,EACAC,EACAC,gB,GA9D8BqC,aAAzBlB,EACZmB,aAAe,CACpBxC,KAAM,EACNC,QAAS,EACTC,IAAK,GCPT,IAMeuC,EANH,kBACV,mCACE,cAAC,EAAD,OCAJC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.62d9fd64.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return good || neutral || bad ? (\r\n    <>\r\n      <p>\r\n        Good: <span>{good}</span>\r\n      </p>\r\n      <p>\r\n        Neutral: <span>{neutral}</span>\r\n      </p>\r\n      <p>\r\n        Bad: <span>{bad}</span>\r\n      </p>\r\n      <p>\r\n        Total: <span>{total}</span>\r\n      </p>\r\n      <p>\r\n        Positive feedback:<span> {positivePercentage}</span>\r\n      </p>\r\n    </>\r\n  ) : (\r\n    <Notification message=\"No feedback given\" />\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Statistics;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title = \"\", children }) => (\r\n  <section>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst leaveFeedback = ({ options, onLeaveFeedback }) => {\r\n  return options.map((option) => (\r\n    <button\r\n      key={option}\r\n      type=\"button\"\r\n      name={option}\r\n      onClick={onLeaveFeedback}\r\n    >\r\n      {option}\r\n    </button>\r\n  ));\r\n};\r\n\r\nleaveFeedback.protoTypes = {\r\n  options: PropTypes.string.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default leaveFeedback;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Statistics from \"../FeedbackOptions/Statistics\";\r\nimport Section from \"./Section\";\r\nimport FeedbackOptions from \"../FeedbackOptions/leaveFeedback\";\r\n\r\nexport default class MyClassComponent extends Component {\r\n  static defaultProps = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  static propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  };\r\n\r\n  state = {\r\n    good: this.props.good,\r\n    neutral: this.props.neutral,\r\n    bad: this.props.bad,\r\n  };\r\n\r\n  handelbarInc = (e) => {\r\n    const {\r\n      target: { name },\r\n    } = e;\r\n    const nameLower = name.toLowerCase();\r\n    this.setState((state) => ({\r\n      [nameLower]: state[nameLower] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = (a, b, c) => {\r\n    return a + b + c;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = (a, b, c) => {\r\n    const total = a + b + c;\r\n    const percent = (a / total) * 100;\r\n\r\n    return Math.round(percent) + \"%\";\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={[\"Good\", \"Neutral\", \"Bad\"]}\r\n            onLeaveFeedback={this.handelbarInc}\r\n          />\r\n        </Section>\r\n\r\n        <Section title=\"Statistics\">\r\n          <div>\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={this.countTotalFeedback(good, neutral, bad)}\r\n              positivePercentage={this.countPositiveFeedbackPercentage(\r\n                good,\r\n                neutral,\r\n                bad\r\n              )}\r\n            />\r\n          </div>\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport Feedback from \"./FeedbackDisplay/Feedback\";\r\n\r\nconst App = () => (\r\n  <>\r\n    <Feedback />\r\n  </>\r\n);\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}