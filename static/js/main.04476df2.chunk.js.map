{"version":3,"sources":["components/Contacts/Contacts.module.css","components/ContactForm/AddContact.module.css","components/Tools/Section.js","components/Contacts/Contacts.js","components/ContactForm/ErrorNotification.js","components/ContactForm/AddContact.js","components/Tools/ContactFilter.js","components/App.js","index.js"],"names":["module","exports","style","marginTop","marginBottom","Section","title","children","Contacts","contacts","onRemoveContact","className","phonebook","map","id","name","number","key","type","value","onClick","color","display","fontSize","fontWeight","marginLeft","ErrorNotificatrion","errorType","rules","validations","required","regex","messages","AddContact","state","errors","handleSubmit","evt","preventDefault","validateAll","then","props","addContact","reset","catch","formattedErrors","forEach","error","field","message","setState","handleChange","target","this","onSubmit","form","placeholder","onChange","ErrorNotification","Component","width","SearchForm","onChangeFilter","App","filter","changeFilter","e","contact","find","i","alert","contactToAdd","shortid","generate","newContact","removeContact","prevProps","prevState","localStorage","setItem","JSON","stringify","getItem","convrtArr","parse","filteredContacts","toLowerCase","includes","filterContacts","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04476df2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"Contacts_phonebook__3s7Tz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddContact_form__34boh\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst style = {\n  marginTop: 15,\n  marginBottom: 5,\n};\n\nconst Section = ({ title, children }) => (\n  <section>\n    <h2 style={style}>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from \"react\";\nimport style from \"./Contacts.module.css\";\n\nconst Contacts = ({ contacts, onRemoveContact }) => {\n  return (\n    <ul className={style.phonebook}>\n      {contacts.map(({ id, name, number }) => (\n        <li\n          key={id}\n          >\n          {name}: {number}\n          <input\n            type=\"button\"\n            value=\"Delete\"\n            onClick={() => onRemoveContact(id)}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst style = {\n  color: \"blue\",\n  display: \"block\",\n  fontSize: 14,\n  fontWeight: 300,\n  marginLeft: 10,\n};\n\nconst ErrorNotificatrion = ({ errorType }) => (\n  <span style={style}>{errorType}</span>\n);\n\nErrorNotificatrion.propTypes = {\n  errorType: PropTypes.string.isRequired,\n};\n\nexport default ErrorNotificatrion;","import React, { Component } from \"react\";\nimport { validateAll, validations } from \"indicative/validator\";\nimport style from \"./AddContact.module.css\";\nimport ErrorNotification from \"./ErrorNotification\";\n\nconst rules = {\n  name: [validations.required(), validations.regex([\"^[a-zA-Zа-яА-Я]+\"])],\n  number: [validations.required(), validations.regex([/\\(?([0-9]{3})\\)?([ .-]?)([0-9]{3})\\2([0-9]{4})/])],\n};\n\nconst messages = {\n  \"name.required\": \"Please choose a unique name for your contact\",\n  \"number.required\": \"Enter phone number\",\n  \"name.regex\": \"Contact's name contains invalid characters\",\n  \"number.regex\": \"Phone number validation failed\",\n};\n\nexport default class AddContact extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n    errors: null,\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    const { name, number } = this.state;\n\n    validateAll({ name, number }, rules, messages)\n      .then(() => {\n        this.props.addContact({ name, number });\n        this.reset();\n      })\n      .catch((errors) => {\n        const formattedErrors = {};\n        errors.forEach((error) => {\n          formattedErrors[error.field] = error.message;\n        });\n\n        this.setState({\n          errors: formattedErrors,\n        });\n      });\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\", errors: null });\n  };\n\n  render() {\n    const { name, number, errors } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className={style.form}>\n        <label>\n          Name\n          <input\n            value={name}\n            type=\"text\"\n            placeholder=\"Enter name\"\n            onChange={this.handleChange}\n            name=\"name\"\n          />\n          {errors && <ErrorNotification errorType={errors.name} />}\n        </label>\n\n        <label>\n          Number\n          <input\n            value={number}\n            title=\"Name\"\n            type=\"text\"\n            placeholder=\"Enter number\"\n            onChange={this.handleChange}\n            name=\"number\"\n          />\n          {errors && <ErrorNotification errorType={errors.number} />}\n        </label>\n\n        <button type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}","import React from \"react\";\n\nconst style = {\n  width: 200,\n};\n\nconst SearchForm = ({ value, onChangeFilter }) => (\n  <input\n    type=\"text\"\n    value={value}\n    onChange={onChangeFilter}\n    placeholder=\"Find contact by name\"\n    style={style}\n  />\n);\n\nexport default SearchForm;","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport Section from \"./Tools/Section\";\nimport Contacts from \"./Contacts/Contacts\";\nimport AddContact from \"./ContactForm/AddContact\";\nimport SearchForm from \"./Tools/ContactFilter\";\n\nconst filterContacts = (contacts, filter) => {\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  addContact = (contact) => {\n    const { name } = contact;\n\n    if (this.state.contacts.find((i) => i.name === name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      const contactToAdd = {\n        ...contact,\n        id: shortid.generate(),\n        newContact: true,\n      };\n\n      this.setState((state) => ({\n        contacts: [contactToAdd, ...state.contacts],\n      }));\n    }\n  };\n\n  removeContact = (id) => {\n    this.setState((state) => ({\n      contacts: state.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    localStorage.setItem(\"contact\", JSON.stringify(this.state.contacts));\n  }\n\n  componentDidMount() {\n    const contact = localStorage.getItem(\"contact\");\n\n    if (contact) {\n      const convrtArr = JSON.parse(contact);\n      this.setState(() => ({\n        contacts: [...convrtArr],\n      }));\n    }\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = filterContacts(contacts, filter);\n\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <AddContact addContact={this.addContact} />\n        </Section>\n\n        <Section title=\"Contacts\">\n          {(contacts.length > 2 || filter) && (\n            <SearchForm value={filter} onChangeFilter={this.changeFilter} />\n          )}\n          <Contacts\n            contacts={filteredContacts}\n            onRemoveContact={this.removeContact}\n          />\n        </Section>\n      </>\n    );\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}