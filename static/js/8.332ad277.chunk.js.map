{"version":3,"sources":["components/Movie/ReviewsList/ReviewsList.module.css","components/Movie/ReviewsList/ReviewsList.js","pages/Reviews.js","pages/NotFound.js"],"names":["module","exports","ReviewsList","reviews","length","className","styles","reviewsList","map","id","author","content","NotFound","message","Reviews","state","isLoading","fetchReviews","setState","movieId","props","match","params","MoviesAPI","then","this","type","color","height","width","timeout","Component","style","textAlign"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,YAAc,mC,6KCgCjBC,EA5BK,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAClB,qCACGA,EAAQC,OAAS,GAChB,oBAAIC,UAAWC,IAAOC,YAAtB,SACGJ,EAAQK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,+BACE,4BAAIA,IACJ,+BACE,2CADF,IACwBD,OAHjBD,QASK,IAAnBN,EAAQC,QAAgB,cAACQ,EAAA,QAAD,CAAUC,QAAQ,yB,QCd1BC,E,4MACnBC,MAAQ,CAAEZ,QAAS,GAAIa,WAAW,G,EAMlCC,aAAe,WACb,EAAKC,SAAS,CAAEF,WAAW,IADR,IAEXG,EAAY,EAAKC,MAAMC,MAAMC,OAA7BH,QACJA,GACFI,IAA0BJ,GAASK,MAAK,SAACrB,GAAD,OACtC,EAAKe,SAAS,CAAEF,WAAW,EAAOb,gB,kEARtCsB,KAAKR,iB,+BAaG,IAAD,EACwBQ,KAAKV,MAA5BZ,EADD,EACCA,QACR,OAFO,EACUa,UAEf,cAAC,IAAD,CACEX,UAAU,SACVqB,KAAK,WACLC,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,MAGX,cAAC,EAAD,CAAa3B,QAASA,Q,GA7BS4B,c,+FCHtB,SAASnB,EAAT,GAAwD,IAAD,IAAnCC,eAAmC,MAAzB,sBAAyB,EACpE,OAAO,mBAAGmB,MAAO,CAAEC,UAAW,UAAvB,SAAoCpB","file":"static/js/8.332ad277.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"reviewsList\":\"ReviewsList_reviewsList__34eEf\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport NotFound from \"../../../pages/NotFound\";\nimport styles from \"./ReviewsList.module.css\";\n\nconst ReviewsList = ({ reviews }) => (\n  <>\n    {reviews.length > 0 && (\n      <ul className={styles.reviewsList}>\n        {reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <p>{content}</p>\n            <h3>\n              <span>Author:</span> {author}\n            </h3>\n          </li>\n        ))}\n      </ul>\n    )}\n    {reviews.length === 0 && <NotFound message=\"No reviews found\" />}\n  </>\n);\n\nReviewsList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default ReviewsList;\n","import React, { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport ReviewsList from \"../components/Movie/ReviewsList/ReviewsList\";\nimport * as MoviesAPI from \"../components/API\";\n\nexport default class Reviews extends Component {\n  state = { reviews: [], isLoading: false };\n\n  componentDidMount() {\n    this.fetchReviews();\n  }\n\n  fetchReviews = () => {\n    this.setState({ isLoading: true });\n    const { movieId } = this.props.match.params;\n    if (movieId) {\n      MoviesAPI.getMovieReviews(movieId).then((reviews) =>\n        this.setState({ isLoading: false, reviews })\n      );\n    }\n  };\n\n  render() {\n    const { reviews, isLoading } = this.state;\n    return isLoading ? (\n      <Loader\n        className=\"loader\"\n        type=\"TailSpin\"\n        color=\"#01d277\"\n        height={100}\n        width={100}\n        timeout={3000}\n      />\n    ) : (\n      <ReviewsList reviews={reviews} />\n    );\n  }\n}","import React from \"react\";\n\nexport default function NotFound({ message = \"Sorry nothing found\" }) {\n  return <p style={{ textAlign: \"center\" }}>{message}</p>;\n}"],"sourceRoot":""}